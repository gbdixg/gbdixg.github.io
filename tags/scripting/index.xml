<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>scripting on Write-Verbose</title>
    <link>https://write-verbose.com/tags/scripting/</link>
    <description>Recent content in scripting on Write-Verbose</description>
    <image>
      <url>https://write-verbose.com/papermod-cover.png</url>
      <link>https://write-verbose.com/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 13 Apr 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://write-verbose.com/tags/scripting/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Find a computer&#39;s Active Directory Site and Subnet with PowerShell</title>
      <link>https://write-verbose.com/2019/04/13/find-adsite/</link>
      <pubDate>Sat, 13 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://write-verbose.com/2019/04/13/find-adsite/</guid>
      <description>&lt;p&gt;Read-on for a PowerShell command to get the Active Directory Subnet and Site from the computername or IP Address.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Read-on for a PowerShell command to get the Active Directory Subnet and Site from the computername or IP Address.</p>
<p><strong>Active Directory Sites</strong> represent locations with good network connectivity. An ADSite is often created for each office or a group of offices in a metropolitan area, to generate the replication topology between Domain Controllers, and to help workstations/servers locate closest services.</p>
<p><strong>Active Directory Subnets</strong> define the IP ranges included in an AD Site. A member workstation/server will have an IP address that should fall within a defined AD subnet, making it part of an AD Site.</p>
<p>AD Site membership is not fixed. Laptops can move between Sites and Subnets when they roam to another location.</p>
<blockquote>
<p>An incorrect or undefined AD subnet can lead to slow logon times and slow access to DFS shares. A domain member would use any server that responds when it isn&rsquo;t in a defined subnet.</p>
</blockquote>
<h2 id="powershell-script">PowerShell script</h2>
<p>The <strong>Find-ADSite</strong> PowerShell function below will return the AD Site and Subnet for a specified computer name or IP Address.<br>
If a company populates subnet descriptions with useful information, it can also identify information such as the specific Office or floor.</p>
<p>AD Administrators may define a <a href="https://blog.mindcore.dk/2013/07/catch-all-or-super-subnet-in-sites-and/">catch-all subnet</a> with a wide address range. By default if the IP address is within more than one subnet, the output will only include the smallest range. Use the -AllMatches parameter to see everything.</p>
<p><img loading="lazy" src="/img/find-adsite1.png" alt="Find-ADSite"  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="k">Function</span> <span class="nb">Find-ADSite</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="cm">&lt;#
</span></span></span><span class="line"><span class="cl"><span class="cm"> </span><span class="sd">.Synopsis</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Used to get the Active Directory subnet and the site it is assigned to for a Windows computer/IP address
</span></span></span><span class="line"><span class="cl"><span class="cm"> </span><span class="sd">.Description</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Requires only standard user read access to AD and can determine the ADSite for a local or remote computer
</span></span></span><span class="line"><span class="cl"><span class="cm"> </span><span class="sd">.PARAMETER</span><span class="cm">  IPAddress
</span></span></span><span class="line"><span class="cl"><span class="cm">  Specifies the IP Address for the subnet/site lookup in as a .NET System.Net.IPAddress
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  When this parameter is used, the computername is not specified.
</span></span></span><span class="line"><span class="cl"><span class="cm"> </span><span class="sd">.PARAMETER</span><span class="cm">  Computername
</span></span></span><span class="line"><span class="cl"><span class="cm">  Specifies a computername for the subnet/site lookup.
</span></span></span><span class="line"><span class="cl"><span class="cm">  The computername is resolved to an IP address before performing the subnet query.
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Defaults to %COMPUTERNAME%
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  When this parameter is used, the IPAddress and IP are not specified.
</span></span></span><span class="line"><span class="cl"><span class="cm"> </span><span class="sd">.PARAMETER</span><span class="cm">  DC
</span></span></span><span class="line"><span class="cl"><span class="cm">  A specific domain controller in the current users domain for the subnet query
</span></span></span><span class="line"><span class="cl"><span class="cm">  If not specified, standard DC locator methods are used.
</span></span></span><span class="line"><span class="cl"><span class="cm"> </span><span class="sd">.PARAMETER</span><span class="cm">  AllMatches
</span></span></span><span class="line"><span class="cl"><span class="cm">  A switch parameter that causes the subnet query to return all matching subnets in AD
</span></span></span><span class="line"><span class="cl"><span class="cm">  This is not normally used as the default behaviour (only the most specific match is returned) is usually prefered.
</span></span></span><span class="line"><span class="cl"><span class="cm">  This switch will include &#34;catch-all&#34; subnets that may be defined to accomodate missing subnets
</span></span></span><span class="line"><span class="cl"><span class="cm"> </span><span class="sd">.Example</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  PS C:\&gt;Find-ADSite -ComputerName PC123456789
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  ComputerName      : PC123456789
</span></span></span><span class="line"><span class="cl"><span class="cm">  IPAddress         : 162.26.192.151
</span></span></span><span class="line"><span class="cl"><span class="cm">  ADSubnetName      : 162.26.192.128/25
</span></span></span><span class="line"><span class="cl"><span class="cm">  ADSubnetDesc      : 3rd Floor Main Road Office
</span></span></span><span class="line"><span class="cl"><span class="cm">  ADSiteName        : EULON01
</span></span></span><span class="line"><span class="cl"><span class="cm">  ADSiteDescription : London
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm"> </span><span class="sd">.Notes</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Version:        1.1
</span></span></span><span class="line"><span class="cl"><span class="cm">#&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="k">CmdletBinding</span><span class="p">(</span><span class="n">DefaultParameterSetName</span> <span class="p">=</span> <span class="s2">&#34;byHost&#34;</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    <span class="k">Param</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="k">Parameter</span><span class="p">(</span><span class="k">Position</span> <span class="p">=</span> <span class="n">0</span><span class="p">,</span> <span class="k">ValueFromPipeline</span> <span class="p">=</span> <span class="nv">$true</span><span class="p">,</span> <span class="k">ValueFromPipelineByPropertyName</span> <span class="p">=</span> <span class="nv">$True</span><span class="p">,</span> <span class="k">ParameterSetName</span> <span class="p">=</span> <span class="s2">&#34;byHost&#34;</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">        <span class="no">[string]</span><span class="nv">$ComputerName</span> <span class="p">=</span> <span class="nv">$Env:COMPUTERNAME</span>
</span></span><span class="line"><span class="cl">        <span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="k">Parameter</span><span class="p">(</span><span class="k">Position</span> <span class="p">=</span> <span class="n">0</span><span class="p">,</span> <span class="k">ValueFromPipeline</span> <span class="p">=</span> <span class="nv">$true</span><span class="p">,</span> <span class="k">ValueFromPipelineByPropertyName</span> <span class="p">=</span> <span class="nv">$True</span><span class="p">,</span> <span class="k">Mandatory</span> <span class="p">=</span> <span class="nv">$True</span><span class="p">,</span> <span class="k">ParameterSetName</span> <span class="p">=</span> <span class="s2">&#34;byIPAddress&#34;</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">        <span class="no">[System.Net.IPAddress]</span><span class="nv">$IPAddress</span>
</span></span><span class="line"><span class="cl">        <span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="k">Parameter</span><span class="p">(</span><span class="k">Position</span> <span class="p">=</span> <span class="n">1</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">        <span class="no">[string]</span><span class="nv">$DC</span>
</span></span><span class="line"><span class="cl">        <span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="k">Parameter</span><span class="p">()]</span>
</span></span><span class="line"><span class="cl">        <span class="no">[switch]</span><span class="nv">$AllMatches</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">PROCESS</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">switch</span> <span class="p">(</span><span class="nv">$pscmdlet</span><span class="p">.</span><span class="k">ParameterSetName</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;byHost&#34;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$Resolved</span> <span class="p">=</span> <span class="no">[system.net.dns]</span><span class="p">::</span><span class="n">GetHostByName</span><span class="p">(</span><span class="nv">$Computername</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="no">[System.Net.IPAddress]</span><span class="nv">$IP</span> <span class="p">=</span> <span class="p">(</span><span class="nv">$Resolved</span><span class="p">.</span><span class="n">AddressList</span><span class="p">)[</span><span class="n">0</span><span class="p">]</span> <span class="o">-as</span> <span class="no">[System.Net.IPAddress]</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span><span class="k">catch</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="nb">Write-Warning</span> <span class="s2">&#34;$ComputerName :: Unable to resolve name to an IP Address&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$IP</span> <span class="p">=</span> <span class="nv">$Null</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;byIPAddress&#34;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$Resolved</span> <span class="p">=</span> <span class="no">[system.net.dns]</span><span class="p">::</span><span class="n">GetHostByAddress</span><span class="p">(</span><span class="nv">$IPAddress</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$ComputerName</span> <span class="p">=</span> <span class="nv">$Resolved</span><span class="p">.</span><span class="n">HostName</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span> <span class="k">catch</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="c"># Write-Warning &#34;$IP :: Could not be resolved to a hostname&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$ComputerName</span> <span class="p">=</span> <span class="s2">&#34;Unable to resolve&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="nv">$IP</span> <span class="p">=</span> <span class="nv">$IPAddress</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="p">}</span><span class="c">#switch</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nv">$IP</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c"># The following maths loops over all the possible subnet mask lengths</span>
</span></span><span class="line"><span class="cl">            <span class="c"># The masks are converted into the number of Bits to allow conversion to CIDR format</span>
</span></span><span class="line"><span class="cl">            <span class="c"># The script tries to lookup every possible range/subnet bits combination and keeps going until it finds a hit in AD</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="no">[psobject[]]</span><span class="nv">$MatchedSubnets</span> <span class="p">=</span> <span class="p">@()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="k">For</span> <span class="p">(</span><span class="nv">$bit</span> <span class="p">=</span> <span class="n">30</span> <span class="p">;</span> <span class="nv">$bit</span> <span class="o">-ge</span> <span class="n">1</span><span class="p">;</span> <span class="nv">$bit</span><span class="p">--)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="no">[int]</span><span class="nv">$octet</span> <span class="p">=</span> <span class="no">[math]</span><span class="p">::</span><span class="n">Truncate</span><span class="p">((</span><span class="nv">$bit</span> <span class="p">-</span> <span class="n">1</span> <span class="p">)</span> <span class="p">/</span> <span class="n">8</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$net</span> <span class="p">=</span> <span class="no">[byte[]]</span><span class="p">@()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="k">for</span> <span class="p">(</span><span class="nv">$o</span> <span class="p">=</span> <span class="n">0</span><span class="p">;</span> <span class="nv">$o</span> <span class="o">-le</span> <span class="n">3</span><span class="p">;</span> <span class="nv">$o</span><span class="p">++)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$ba</span> <span class="p">=</span> <span class="nv">$ip</span><span class="p">.</span><span class="n">GetAddressBytes</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">                    <span class="k">if</span> <span class="p">(</span><span class="nv">$o</span> <span class="o">-lt</span> <span class="nv">$Octet</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="nv">$Net</span> <span class="p">+=</span> <span class="nv">$ba</span><span class="p">[</span><span class="nv">$o</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                    <span class="p">}</span> <span class="k">ELSEIF</span> <span class="p">(</span><span class="nv">$o</span> <span class="o">-eq</span> <span class="nv">$octet</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="nv">$factor</span> <span class="p">=</span> <span class="n">8</span> <span class="p">+</span> <span class="nv">$Octet</span> <span class="p">*</span> <span class="n">8</span> <span class="p">-</span> <span class="nv">$bit</span>
</span></span><span class="line"><span class="cl">                        <span class="nv">$Divider</span> <span class="p">=</span> <span class="no">[math]</span><span class="p">::</span><span class="n">pow</span><span class="p">(</span><span class="n">2</span><span class="p">,</span> <span class="nv">$factor</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                        <span class="nv">$value</span> <span class="p">=</span> <span class="nv">$divider</span> <span class="p">*</span> <span class="no">[math]</span><span class="p">::</span><span class="n">Truncate</span><span class="p">(</span><span class="nv">$ba</span><span class="p">[</span><span class="nv">$o</span><span class="p">]</span> <span class="p">/</span> <span class="nv">$divider</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                        <span class="nv">$Net</span> <span class="p">+=</span> <span class="nv">$value</span>
</span></span><span class="line"><span class="cl">                    <span class="p">}</span> <span class="k">ELSE</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="nv">$Net</span> <span class="p">+=</span> <span class="n">0</span>
</span></span><span class="line"><span class="cl">                    <span class="p">}</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span> <span class="c">#Next</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="c">#Format network in CIDR notation</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$Network</span> <span class="p">=</span> <span class="no">[string]</span><span class="p">::</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;.&#39;</span><span class="p">,</span> <span class="nv">$net</span><span class="p">)</span> <span class="p">+</span> <span class="s2">&#34;/$bit&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="c"># Try to find this Network in AD Subnets list</span>
</span></span><span class="line"><span class="cl">                <span class="nb">Write-Verbose</span> <span class="s2">&#34;Trying : $Network&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="k">try</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$de</span> <span class="p">=</span> <span class="nb">New-Object</span> <span class="n">System</span><span class="p">.</span><span class="n">DirectoryServices</span><span class="p">.</span><span class="n">DirectoryEntry</span><span class="p">(</span><span class="s2">&#34;LDAP://&#34;</span> <span class="p">+</span> <span class="nv">$DC</span> <span class="p">+</span> <span class="s2">&#34;rootDSE&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$Root</span> <span class="p">=</span> <span class="nb">New-Object</span> <span class="n">System</span><span class="p">.</span><span class="n">DirectoryServices</span><span class="p">.</span><span class="n">DirectoryEntry</span><span class="p">(</span><span class="s2">&#34;LDAP://$DC</span><span class="p">$(</span><span class="nv">$de</span><span class="p">.</span><span class="n">configurationNamingContext</span><span class="p">)</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$ds</span> <span class="p">=</span> <span class="nb">New-Object</span> <span class="n">System</span><span class="p">.</span><span class="n">Directoryservices</span><span class="p">.</span><span class="n">DirectorySearcher</span><span class="p">(</span><span class="nv">$root</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$ds</span><span class="p">.</span><span class="k">filter</span> <span class="p">=</span> <span class="s2">&#34;(CN=$Network)&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$Result</span> <span class="p">=</span> <span class="nv">$ds</span><span class="p">.</span><span class="n">findone</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span><span class="k">catch</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$Result</span> <span class="p">=</span> <span class="nv">$null</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="p">(</span><span class="nv">$Result</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="nb">write-verbose</span> <span class="s2">&#34;AD Site found for $IP&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                    <span class="c"># Try to split out AD Site from LDAP path</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$SiteDN</span> <span class="p">=</span> <span class="nv">$Result</span><span class="p">.</span><span class="n">GetDirectoryEntry</span><span class="p">().</span><span class="n">siteObject</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$SiteDe</span> <span class="p">=</span> <span class="nb">New-Object</span> <span class="n">-TypeName</span> <span class="n">System</span><span class="p">.</span><span class="n">DirectoryServices</span><span class="p">.</span><span class="n">DirectoryEntry</span><span class="p">(</span><span class="s2">&#34;LDAP://$SiteDN&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$ADSite</span> <span class="p">=</span> <span class="nv">$SiteDe</span><span class="p">.</span><span class="n">Name</span><span class="p">[</span><span class="n">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$ADSiteDescription</span> <span class="p">=</span> <span class="nv">$SiteDe</span><span class="p">.</span><span class="n">Description</span><span class="p">[</span><span class="n">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                    <span class="nv">$MatchedSubnets</span> <span class="p">+=</span> <span class="no">[PSCustomObject][Ordered]</span><span class="p">@{</span>
</span></span><span class="line"><span class="cl">                        <span class="n">ComputerName</span> <span class="p">=</span> <span class="nv">$ComputerName</span>
</span></span><span class="line"><span class="cl">                        <span class="n">IPAddress</span>    <span class="p">=</span> <span class="nv">$IP</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">                        <span class="n">ADSubnetName</span> <span class="p">=</span> <span class="p">$(</span><span class="nv">$Result</span><span class="p">.</span><span class="n">properties</span><span class="p">.</span><span class="n">name</span><span class="p">).</span><span class="n">ToString</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">                        <span class="n">ADSubnetDesc</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="p">$(</span><span class="nv">$Result</span><span class="p">.</span><span class="n">properties</span><span class="p">.</span><span class="n">description</span><span class="p">)</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                        <span class="n">ADSiteName</span>       <span class="p">=</span> <span class="nv">$ADSite</span>
</span></span><span class="line"><span class="cl">                        <span class="n">ADSiteDescription</span> <span class="p">=</span> <span class="nv">$ADSiteDescription</span>
</span></span><span class="line"><span class="cl">                    <span class="p">}</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$bFound</span> <span class="p">=</span> <span class="nv">$true</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span><span class="c">#endif</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span><span class="c">#next</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="p">}</span><span class="c">#endif</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nv">$bFound</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="nv">$AllMatches</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="c"># output all the matched subnets</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="nv">$MatchedSubnets</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="c"># Only output the subnet with the largest mask bits</span>
</span></span><span class="line"><span class="cl">                <span class="no">[Int32]</span><span class="nv">$MaskBits</span> <span class="p">=</span> <span class="n">0</span> <span class="c"># initial value</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="k">Foreach</span> <span class="p">(</span><span class="nv">$MatchedSubnet</span> <span class="k">in</span> <span class="nv">$MatchedSubnets</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                    <span class="k">if</span> <span class="p">(</span><span class="nv">$MatchedSubnet</span><span class="p">.</span><span class="n">ADSubnetName</span> <span class="o">-match</span> <span class="s2">&#34;\/(?&lt;Bits&gt;\d+)$&#34;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="no">[Int32]</span><span class="nv">$ThisMaskBits</span> <span class="p">=</span> <span class="nv">$Matches</span><span class="p">[</span><span class="s1">&#39;Bits&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                        <span class="nb">Write-Verbose</span> <span class="s2">&#34;ThisMaskBits = &#39;$ThisMaskBits&#39;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                        <span class="k">if</span> <span class="p">(</span><span class="nv">$ThisMaskBits</span> <span class="o">-gt</span> <span class="nv">$MaskBits</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                            <span class="c"># This is a more specific subnet</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                            <span class="nv">$OutputSubnet</span> <span class="p">=</span> <span class="nv">$MatchedSubnet</span>
</span></span><span class="line"><span class="cl">                            <span class="nv">$MaskBits</span> <span class="p">=</span> <span class="nv">$ThisMaskBits</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                            <span class="nb">Write-Verbose</span> <span class="s2">&#34;No match&#34;</span>
</span></span><span class="line"><span class="cl">                        <span class="p">}</span>
</span></span><span class="line"><span class="cl">                    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="nb">Write-Verbose</span> <span class="s2">&#34;No match&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="p">}</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$OutputSubnet</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span><span class="c">#endif</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="nb">Write-Verbose</span> <span class="s2">&#34;AD Subnet not found for $IP&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="nv">$IP</span> <span class="o">-eq</span> <span class="nv">$null</span><span class="p">)</span> <span class="p">{</span><span class="nv">$IP</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span><span class="p">}</span> <span class="c"># required to prevent exception on ToString() below</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="nb">New-Object</span> <span class="n">-TypeName</span> <span class="n">PSObject</span> <span class="n">-Property</span> <span class="p">@{</span>
</span></span><span class="line"><span class="cl">                <span class="n">ComputerName</span> <span class="p">=</span> <span class="nv">$ComputerName</span>
</span></span><span class="line"><span class="cl">                <span class="n">IPAddress</span>    <span class="p">=</span> <span class="nv">$IP</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">                <span class="n">ADSubnetName</span> <span class="p">=</span> <span class="s2">&#34;Not found&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="n">ADSubnetDesc</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="n">ADSiteName</span>   <span class="p">=</span> <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="n">ADSiteDescription</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span><span class="c">#end if</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="c">#process</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p><br/><br/></p>
<blockquote>
<p>This article was originally posted on <a href="http://write-verbose.com">Write-Verbose.com</a></p>
</blockquote>]]></content:encoded>
    </item>
    
    <item>
      <title>Active Directory ADSystemInfo with PowerShell</title>
      <link>https://write-verbose.com/2019/03/30/adsysteminfo/</link>
      <pubDate>Sat, 30 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://write-verbose.com/2019/03/30/adsysteminfo/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;ADSystemInfo is a built-in COM object in Windows that simplifies lookup of Active Directory user and computer information.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <content:encoded><![CDATA[<blockquote>
<p>ADSystemInfo is a built-in COM object in Windows that simplifies lookup of Active Directory user and computer information.</p>
</blockquote>
<p>ADSystemInfo can only return information about the local computer and current user. The computer must be joined to a domain and a domain controller must be reachable when the function is called.</p>
<p>Its simple to instantiate COM objects in PowerShell. The function below shows how to use this object.</p>
<h2 id="example-output">EXAMPLE OUTPUT</h2>
<p><img loading="lazy" src="/img/adsysteminfo.png" alt="Get-ADSystemInfo"  />
</p>
<h2 id="powershell-script">POWERSHELL SCRIPT</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="k">Function</span> <span class="nb">Get-ADSystemInfo</span><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="cm">&lt;#
</span></span></span><span class="line"><span class="cl"><span class="cm">	</span><span class="sd">.Synopsis</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">		Used to lookup specific AD user/computer object properties of the current session
</span></span></span><span class="line"><span class="cl"><span class="cm">	</span><span class="sd">.Description</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">		Uses &#34;ADSystemInfo&#34; COM object to get Active Directory attributes for the current user and computer
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">	</span><span class="sd">.Example</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">		PS C:\&gt;Get-ADSystemInfo
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">		ComputerDN      : CN=EGBLHCNU335BQCG,OU=GBR,OU=Workstations,OU=EU,OU=Regions,DC=mycompany,DC=com
</span></span></span><span class="line"><span class="cl"><span class="cm">		SiteName        : EULON
</span></span></span><span class="line"><span class="cl"><span class="cm">		DomainDNSName   : mycompany.com
</span></span></span><span class="line"><span class="cl"><span class="cm">		DomainShortName : MYCOMPANY
</span></span></span><span class="line"><span class="cl"><span class="cm">		ForestDNSName   : mycompany.com
</span></span></span><span class="line"><span class="cl"><span class="cm">		IsNativeMode    : True
</span></span></span><span class="line"><span class="cl"><span class="cm">		PDCRoleOwner    : CN=527616-NAADCP01,CN=Servers,CN=Global,CN=Sites,CN=Configuration,DC=mycompany,DC=com
</span></span></span><span class="line"><span class="cl"><span class="cm">		SchemaRoleOwner : CN=527616-NAADCP01,CN=Servers,CN=Global,CN=Sites,CN=Configuration,DC=mycompany,DC=com
</span></span></span><span class="line"><span class="cl"><span class="cm">		UserDN          : CN=gdixon2,OU=Users,OU=GBR,OU=Accounts,OU=EU,OU=Regions,DC=mycompany,DC=com
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">	</span><span class="sd">.Notes</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">		Version:        1.0
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">	</span><span class="sd">.Link</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">		http://msdn.microsoft.com/en-us/library/aa705962(VS.85).aspx
</span></span></span><span class="line"><span class="cl"><span class="cm">#&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="k">CmdletBinding</span><span class="p">()]</span>
</span></span><span class="line"><span class="cl"><span class="k">Param</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="k">Process</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="nv">$Output</span> <span class="p">=</span> <span class="nb">New-Object</span> <span class="n">-TypeName</span> <span class="n">PSObject</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">				<span class="nb">Select </span><span class="n">ComputerDN</span><span class="p">,</span><span class="n">SiteName</span><span class="p">,</span><span class="n">DomainDNSName</span><span class="p">,</span><span class="n">DomainShortName</span><span class="p">,</span><span class="n">ForestDNSName</span><span class="p">,</span><span class="n">IsNativeMode</span><span class="p">,</span><span class="n">PDCRoleOwner</span><span class="p">,</span><span class="n">SchemaRoleOwner</span><span class="p">,</span><span class="n">UserDN</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="nv">$obj</span> <span class="p">=</span> <span class="nb">new-object</span> <span class="n">-com</span> <span class="n">ADSystemInfo</span>
</span></span><span class="line"><span class="cl">			<span class="nv">$type</span> <span class="p">=</span> <span class="nv">$obj</span><span class="p">.</span><span class="n">gettype</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="nv">$Output</span><span class="p">.</span><span class="n">ComputerDN</span> <span class="p">=</span> <span class="nv">$type</span><span class="p">.</span><span class="n">InvokeMember</span><span class="p">(</span><span class="s2">&#34;ComputerName&#34;</span><span class="p">,</span><span class="s2">&#34;GetProperty&#34;</span><span class="p">,</span><span class="nv">$null</span><span class="p">,</span><span class="nv">$obj</span><span class="p">,</span><span class="nv">$null</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nv">$Output</span><span class="p">.</span><span class="n">SiteName</span> <span class="p">=</span> <span class="nv">$type</span><span class="p">.</span><span class="n">InvokeMember</span><span class="p">(</span><span class="s2">&#34;sitename&#34;</span><span class="p">,</span><span class="s2">&#34;GetProperty&#34;</span><span class="p">,</span><span class="nv">$null</span><span class="p">,</span><span class="nv">$obj</span><span class="p">,</span><span class="nv">$null</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nv">$Output</span><span class="p">.</span><span class="n">DomainDNSName</span> <span class="p">=</span> <span class="nv">$type</span><span class="p">.</span><span class="n">InvokeMember</span><span class="p">(</span><span class="s2">&#34;DomainDNSName&#34;</span><span class="p">,</span><span class="s2">&#34;GetProperty&#34;</span><span class="p">,</span><span class="nv">$null</span><span class="p">,</span><span class="nv">$obj</span><span class="p">,</span><span class="nv">$null</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nv">$Output</span><span class="p">.</span><span class="n">DomainShortName</span> <span class="p">=</span> <span class="nv">$type</span><span class="p">.</span><span class="n">InvokeMember</span><span class="p">(</span><span class="s2">&#34;DomainShortName&#34;</span><span class="p">,</span><span class="s2">&#34;GetProperty&#34;</span><span class="p">,</span><span class="nv">$null</span><span class="p">,</span><span class="nv">$obj</span><span class="p">,</span><span class="nv">$null</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nv">$Output</span><span class="p">.</span><span class="n">ForestDNSName</span> <span class="p">=</span> <span class="nv">$type</span><span class="p">.</span><span class="n">InvokeMember</span><span class="p">(</span><span class="s2">&#34;ForestDNSName&#34;</span><span class="p">,</span><span class="s2">&#34;GetProperty&#34;</span><span class="p">,</span><span class="nv">$null</span><span class="p">,</span><span class="nv">$obj</span><span class="p">,</span><span class="nv">$null</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nv">$Output</span><span class="p">.</span><span class="n">IsNativeMode</span> <span class="p">=</span> <span class="nv">$type</span><span class="p">.</span><span class="n">InvokeMember</span><span class="p">(</span><span class="s2">&#34;IsNativeMode&#34;</span><span class="p">,</span><span class="s2">&#34;GetProperty&#34;</span><span class="p">,</span><span class="nv">$null</span><span class="p">,</span><span class="nv">$obj</span><span class="p">,</span><span class="nv">$null</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nv">$Output</span><span class="p">.</span><span class="n">PDCRoleOwner</span> <span class="p">=</span> <span class="p">(</span><span class="nv">$type</span><span class="p">.</span><span class="n">InvokeMember</span><span class="p">(</span><span class="s2">&#34;PDCRoleOwner&#34;</span><span class="p">,</span><span class="s2">&#34;GetProperty&#34;</span><span class="p">,</span><span class="nv">$null</span><span class="p">,</span><span class="nv">$obj</span><span class="p">,</span><span class="nv">$null</span><span class="p">)</span> <span class="o">-replace</span> <span class="s2">&#34;CN=NTDS Settings,&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nv">$Output</span><span class="p">.</span><span class="n">SchemaRoleOwner</span> <span class="p">=</span> <span class="p">(</span><span class="nv">$type</span><span class="p">.</span><span class="n">InvokeMember</span><span class="p">(</span><span class="s2">&#34;SchemaRoleOwner&#34;</span><span class="p">,</span><span class="s2">&#34;GetProperty&#34;</span><span class="p">,</span><span class="nv">$null</span><span class="p">,</span><span class="nv">$obj</span><span class="p">,</span><span class="nv">$null</span><span class="p">)</span> <span class="o">-replace</span> <span class="s2">&#34;CN=NTDS Settings,&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nv">$Output</span><span class="p">.</span><span class="n">UserDN</span> <span class="p">=</span> <span class="nv">$type</span><span class="p">.</span><span class="n">InvokeMember</span><span class="p">(</span><span class="s2">&#34;UserName&#34;</span><span class="p">,</span><span class="s2">&#34;GetProperty&#34;</span><span class="p">,</span><span class="nv">$null</span><span class="p">,</span><span class="nv">$obj</span><span class="p">,</span><span class="nv">$null</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="nv">$Output</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p><br/><br/></p>
<blockquote>
<p>This article was originally posted on <a href="http://write-verbose.com">Write-Verbose.com</a></p>
</blockquote>]]></content:encoded>
    </item>
    
  </channel>
</rss>
