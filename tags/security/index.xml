<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>security on Write-Verbose</title>
    <link>https://write-verbose.com/tags/security/</link>
    <description>Recent content in security on Write-Verbose</description>
    <image>
      <url>https://write-verbose.com/papermod-cover.png</url>
      <link>https://write-verbose.com/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 15 Dec 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://write-verbose.com/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Audit Chrome Extensions with PowerShell</title>
      <link>https://write-verbose.com/2018/12/15/audit-google-chrome-extensions/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://write-verbose.com/2018/12/15/audit-google-chrome-extensions/</guid>
      <description>A PowerShell script to list the installed Google Chrome extensions on a local or remote computer</description>
      <content:encoded><![CDATA[<p>This post includes a PowerShell <em>Get-ChromeExtension</em> script to list installed extensions on the local or remote computer.</p>
<p>Browser extensions are supposed to be curated and vetted, but there have been <a href="https://securityboulevard.com/2020/12/3-million-chrome-users-infected-via-extensions-here-we-go-again/">many examples of malware</a>. If you don&rsquo;t already have control of extensions through an allow or blocklist, the first step is to find out what is in-use.</p>
<p>The code below is a PowerShell function to get the installed Google Chrome browser extensions from a local or remote Windows computer.</p>
<blockquote>
<p>Chrome Browser Extensions install into the user profile and do not appear in the Add/Remove Programs list.</p>
</blockquote>
<p>Chrome Extensions are a challenge to audit due to the way they install and lack of enumeration options.
The PowerShell script below gets the installed extensions using the following method:</p>
<ul>
<li>Get the <strong>extension IDs</strong> from the folders names under <code>%userprofile%\AppData\Local\Google\Chrome\User Data\Default\Extensions</code></li>
<li>Lookup the <strong>extension name</strong> on the Chrome Web Store using the extension ID</li>
<li>Get the <strong>extension version</strong> from the <code>manifest.json</code> file in the extension folder</li>
</ul>
<h2 id="example-script-output">Example script output</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cmd" data-lang="cmd"><span class="line"><span class="cl">C<span class="p">:</span><span class="nl">\</span><span class="c1">&gt; Get-ChromeExtension | Select Name,Version,Description | ft -AutoSize</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Name                            Version      Description
</span></span><span class="line"><span class="cl">----                            -------      -----------
</span></span><span class="line"><span class="cl">Docs                            0.10         Create and edit documents
</span></span><span class="line"><span class="cl">Google Drive                    14.1         Google Drive: create, share and keep all your stuff in one place.
</span></span><span class="line"><span class="cl">YouTube                         4.2.8        The official YouTube website
</span></span><span class="line"><span class="cl">Sheets                          1.2          Create and edit spreadsheets
</span></span><span class="line"><span class="cl">Google Docs Offline             1.4          Get things done offline with the Google Docs family of products.
</span></span><span class="line"><span class="cl">Google Wallet                   1.0.0.4
</span></span><span class="line"><span class="cl">Gmail                           8.1          Fast, searchable email with less spam.
</span></span><span class="line"><span class="cl">Chrome Cast                     6618.312.0.2
</span></span><span class="line"><span class="cl">Slides                          0.10         Create and edit presentations
</span></span><span class="line"><span class="cl">Docs                            0.10         Create and edit documents
</span></span><span class="line"><span class="cl">Google Drive                    14.2         Google Drive: create, share and keep all your stuff in one place.
</span></span><span class="line"><span class="cl">YouTube                         4.2.8        The official YouTube website
</span></span><span class="line"><span class="cl">OneTab                          1.18         Save up to 95% memory and reduce tab clutter
</span></span><span class="line"><span class="cl">uBlock Origin                   1.20.0       Finally, an efficient blocker. Easy on CPU and memory.
</span></span><span class="line"><span class="cl">Dark Reader                     4.7.12       Dark mode for every website. Take care of your eyes, use dark theme for night and daily browsing.
</span></span><span class="line"><span class="cl">Share link via email            3.2.1        Adds a button and context menu item to send the page URL or a link URL via email
</span></span><span class="line"><span class="cl">Sheets                          1.2          Create and edit spreadsheets
</span></span><span class="line"><span class="cl">Google Docs Offline             1.7          Get things done offline with the Google Docs family of products.
</span></span><span class="line"><span class="cl">Pinterest Save Button           4.0.82       Save the things you find on the Web.
</span></span><span class="line"><span class="cl">Google Wallet                   1.0.0.4
</span></span><span class="line"><span class="cl">ColorPick Eyedropper            0.0.2.29     An eye-dropper <span class="p">&amp;</span>amp; color-picker tool that allows you to select color values from webpages.
</span></span><span class="line"><span class="cl">Gmail                           8.2          Fast, searchable email with less spam.
</span></span><span class="line"><span class="cl">Chrome Cast                     7519.422.0.3
</span></span></code></pre></div><h2 id="powershell-script">PowerShell Script</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl"><span class="k">function</span> Get-ChromeExtension <span class="o">{</span>
</span></span><span class="line"><span class="cl">&lt;<span class="c1">#</span>
</span></span><span class="line"><span class="cl"> .SYNOPSIS
</span></span><span class="line"><span class="cl">    Gets Chrome Extensions from a <span class="nb">local</span> or remote computer
</span></span><span class="line"><span class="cl"> .DESCRIPTION
</span></span><span class="line"><span class="cl">    Gets the name, version and description of the installed extensions
</span></span><span class="line"><span class="cl">    Admin rights are required to access other profiles on the <span class="nb">local</span> computer or
</span></span><span class="line"><span class="cl">    any profiles on a remote computer.
</span></span><span class="line"><span class="cl">    Internet access is required to lookup the extension ID on the Chrome web store
</span></span><span class="line"><span class="cl"> .PARAMETER Computername
</span></span><span class="line"><span class="cl">    The name of the computer to connect to
</span></span><span class="line"><span class="cl">    The default is the <span class="nb">local</span> machine
</span></span><span class="line"><span class="cl"> .PARAMETER Username
</span></span><span class="line"><span class="cl">    The username to query i.e. the userprofile <span class="o">(</span>c:<span class="se">\u</span>sers<span class="se">\&lt;</span>username&gt;<span class="o">)</span>
</span></span><span class="line"><span class="cl">    If this parameter is omitted, all userprofiles are searched
</span></span><span class="line"><span class="cl"> .EXAMPLE
</span></span><span class="line"><span class="cl">    PS C:<span class="se">\&gt;</span> Get-ChromeExtension
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    This <span class="nb">command</span> will get the Chrome extensions from all the user profiles on the <span class="nb">local</span> computer
</span></span><span class="line"><span class="cl"> .EXAMPLE
</span></span><span class="line"><span class="cl">    PS C:<span class="se">\&gt;</span> Get-ChromeExtension -username Jsmith
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    This <span class="nb">command</span> will get the Chrome extensions installed under c:<span class="se">\u</span>sers<span class="se">\j</span>smith on the <span class="nb">local</span> computer
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> .EXAMPLE
</span></span><span class="line"><span class="cl">    PS C:<span class="se">\&gt;</span> Get-ChromeExtension -Computername PC1234,PC4567
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    This <span class="nb">command</span> will get the Chrome extensions from all the user profiles on the two remote computers specified
</span></span><span class="line"><span class="cl"> .NOTES
</span></span><span class="line"><span class="cl">    Version 1.0
</span></span><span class="line"><span class="cl"><span class="c1">#&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="o">[</span>cmdletbinding<span class="o">()]</span>
</span></span><span class="line"><span class="cl">    PARAM<span class="o">(</span>
</span></span><span class="line"><span class="cl">        <span class="o">[</span>parameter<span class="o">(</span><span class="nv">Position</span> <span class="o">=</span> 0<span class="o">)]</span>
</span></span><span class="line"><span class="cl">        <span class="o">[</span>string<span class="o">]</span><span class="nv">$Computername</span> <span class="o">=</span> <span class="nv">$ENV</span>:COMPUTERNAME
</span></span><span class="line"><span class="cl">        ,
</span></span><span class="line"><span class="cl">        <span class="o">[</span>parameter<span class="o">(</span><span class="nv">Position</span> <span class="o">=</span> 1<span class="o">)]</span>
</span></span><span class="line"><span class="cl">        <span class="o">[</span>string<span class="o">]</span><span class="nv">$Username</span>
</span></span><span class="line"><span class="cl">    <span class="o">)</span>
</span></span><span class="line"><span class="cl">    BEGIN <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">#REGION --- Child function</span>
</span></span><span class="line"><span class="cl">        <span class="k">function</span> Get-ExtensionInfo <span class="o">{</span>
</span></span><span class="line"><span class="cl">            &lt;<span class="c1">#</span>
</span></span><span class="line"><span class="cl">         .SYNOPSIS
</span></span><span class="line"><span class="cl">            Get Name and Version of the a Chrome extension
</span></span><span class="line"><span class="cl">         .PARAMETER Folder
</span></span><span class="line"><span class="cl">            A directory object <span class="o">(</span>under %userprofile%<span class="se">\A</span>ppData<span class="se">\L</span>ocal<span class="se">\G</span>oogle<span class="se">\C</span>hrome<span class="se">\U</span>ser Data<span class="se">\D</span>efault<span class="se">\E</span>xtensions<span class="o">)</span>
</span></span><span class="line"><span class="cl">        <span class="c1">#&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="o">[</span>cmdletbinding<span class="o">()]</span>
</span></span><span class="line"><span class="cl">            PARAM<span class="o">(</span>
</span></span><span class="line"><span class="cl">                <span class="o">[</span>parameter<span class="o">(</span><span class="nv">Position</span> <span class="o">=</span> 0<span class="o">)]</span>
</span></span><span class="line"><span class="cl">                <span class="o">[</span>IO.DirectoryInfo<span class="o">]</span><span class="nv">$Folder</span>
</span></span><span class="line"><span class="cl">            <span class="o">)</span>
</span></span><span class="line"><span class="cl">            BEGIN<span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="nv">$BuiltInExtensions</span> <span class="o">=</span> @<span class="o">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s1">&#39;nmmhkkegccagdldgiimedpiccmgmieda&#39;</span> <span class="o">=</span> <span class="s1">&#39;Google Wallet&#39;</span>
</span></span><span class="line"><span class="cl">                    <span class="s1">&#39;mhjfbmdgcfjbbpaeojofohoefgiehjai&#39;</span> <span class="o">=</span> <span class="s1">&#39;Chrome PDF Viewer&#39;</span>
</span></span><span class="line"><span class="cl">                    <span class="s1">&#39;pkedcjkdefgpdelpbcmbmeomcjbeemfm&#39;</span> <span class="o">=</span> <span class="s1">&#39;Chrome Cast&#39;</span>
</span></span><span class="line"><span class="cl">                <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="o">}</span>
</span></span><span class="line"><span class="cl">            PROCESS <span class="o">{</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># Extension folders are under %userprofile%\AppData\Local\Google\Chrome\User Data\Default\Extensions</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># Folder names match extension ID e.g. blpcfgokakmgnkcojhhkbfbldkacnbeo</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$ExtID</span> <span class="o">=</span> <span class="nv">$Folder</span>.Name
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="k">if</span><span class="o">(</span><span class="nv">$Folder</span>.FullName -match <span class="s1">&#39;\\Users\\(?&lt;username&gt;[^\\]+)\\&#39;</span><span class="o">){</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$Username</span> <span class="o">=</span> <span class="nv">$Matches</span><span class="o">[</span><span class="s1">&#39;username&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">                <span class="o">}</span><span class="k">else</span><span class="o">{</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$Username</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">                <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="c1"># There can be more than one version installed. Get the latest one</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$LastestExtVersionInstallFolder</span> <span class="o">=</span> Get-ChildItem -Path <span class="nv">$Folder</span>.Fullname <span class="p">|</span> Where-Object <span class="o">{</span> <span class="nv">$_</span>.Name -match <span class="s1">&#39;^[0-9\._-]+$&#39;</span> <span class="o">}</span> <span class="p">|</span> Sort-Object -Property CreationTime -Descending <span class="p">|</span> Select-Object -First <span class="m">1</span> -ExpandProperty Name
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="c1"># Get the version from the JSON manifest</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="o">(</span>Test-Path -Path <span class="s2">&#34;</span><span class="k">$(</span><span class="nv">$Folder</span>.Fullname<span class="k">)</span><span class="s2">\$LastestExtVersionInstallFolder\Manifest.json&#34;</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                    <span class="nv">$Manifest</span> <span class="o">=</span> Get-Content -Path <span class="s2">&#34;</span><span class="k">$(</span><span class="nv">$Folder</span>.Fullname<span class="k">)</span><span class="s2">\$LastestExtVersionInstallFolder\Manifest.json&#34;</span> -Raw <span class="p">|</span> ConvertFrom-Json
</span></span><span class="line"><span class="cl">                    <span class="k">if</span> <span class="o">(</span><span class="nv">$Manifest</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">                        <span class="k">if</span> <span class="o">(</span>-not<span class="o">([</span>string<span class="o">]</span>::IsNullOrEmpty<span class="o">(</span><span class="nv">$Manifest</span>.version<span class="o">)))</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">                            <span class="nv">$Version</span> <span class="o">=</span> <span class="nv">$Manifest</span>.version
</span></span><span class="line"><span class="cl">                        <span class="o">}</span>
</span></span><span class="line"><span class="cl">                    <span class="o">}</span>
</span></span><span class="line"><span class="cl">                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">                    <span class="c1"># Just use the folder name as the version</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$Version</span> <span class="o">=</span> <span class="nv">$LastestExtVersionInstallFolder</span>.Name
</span></span><span class="line"><span class="cl">                <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="k">if</span><span class="o">(</span><span class="nv">$BuiltInExtensions</span>.ContainsKey<span class="o">(</span><span class="nv">$ExtID</span><span class="o">)){</span>
</span></span><span class="line"><span class="cl">                    <span class="c1"># Built-in extensions do not appear in the Chrome Store</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                    <span class="nv">$Title</span> <span class="o">=</span> <span class="nv">$BuiltInExtensions</span><span class="o">[</span><span class="nv">$ExtID</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$Description</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="o">}</span><span class="k">else</span><span class="o">{</span>
</span></span><span class="line"><span class="cl">                    <span class="c1"># Lookup the extension in the Store</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$url</span> <span class="o">=</span> <span class="s2">&#34;https://chrome.google.com/webstore/detail/&#34;</span> + <span class="nv">$ExtID</span> + <span class="s2">&#34;?hl=en-us&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                    try <span class="o">{</span>
</span></span><span class="line"><span class="cl">                        <span class="c1"># You may need to include proxy information</span>
</span></span><span class="line"><span class="cl">                        <span class="c1"># $WebRequest = Invoke-WebRequest -Uri $url -ErrorAction Stop -Proxy &#39;http://proxy:port&#39; -ProxyUseDefaultCredentials</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                        <span class="nv">$WebRequest</span> <span class="o">=</span> Invoke-WebRequest -Uri <span class="nv">$url</span> -ErrorAction Stop
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                        <span class="k">if</span> <span class="o">(</span><span class="nv">$WebRequest</span>.StatusCode -eq 200<span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                            <span class="c1"># Get the HTML Page Title but remove &#39; - Chrome Web Store&#39;</span>
</span></span><span class="line"><span class="cl">                            <span class="k">if</span> <span class="o">(</span>-not<span class="o">([</span>string<span class="o">]</span>::IsNullOrEmpty<span class="o">(</span><span class="nv">$WebRequest</span>.ParsedHtml.title<span class="o">)))</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                                <span class="nv">$ExtTitle</span> <span class="o">=</span> <span class="nv">$WebRequest</span>.ParsedHtml.title
</span></span><span class="line"><span class="cl">                                <span class="k">if</span> <span class="o">(</span><span class="nv">$ExtTitle</span> -match <span class="s1">&#39;\s-\s.*$&#39;</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">                                    <span class="nv">$Title</span> <span class="o">=</span> <span class="nv">$ExtTitle</span> -replace <span class="s1">&#39;\s-\s.*$&#39;</span>,<span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">                                    <span class="nv">$extType</span> <span class="o">=</span> <span class="s1">&#39;ChromeStore&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">                                    <span class="nv">$Title</span> <span class="o">=</span> <span class="nv">$ExtTitle</span>
</span></span><span class="line"><span class="cl">                                <span class="o">}</span>
</span></span><span class="line"><span class="cl">                            <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                            <span class="c1"># Screen scrape the Description meta-data</span>
</span></span><span class="line"><span class="cl">                            <span class="nv">$Description</span> <span class="o">=</span> <span class="nv">$webRequest</span>.AllElements.InnerHTML <span class="p">|</span> Where-Object <span class="o">{</span> <span class="nv">$_</span> -match <span class="s1">&#39;&lt;meta name=&#34;Description&#34; content=&#34;([^&#34;]+)&#34;&gt;&#39;</span> <span class="o">}</span> <span class="p">|</span> Select-object -First <span class="m">1</span> <span class="p">|</span> ForEach-Object <span class="o">{</span> <span class="nv">$Matches</span><span class="o">[</span>1<span class="o">]</span> <span class="o">}</span>
</span></span><span class="line"><span class="cl">                        <span class="o">}</span>
</span></span><span class="line"><span class="cl">                    <span class="o">}</span> catch <span class="o">{</span>
</span></span><span class="line"><span class="cl">                        Write-Warning <span class="s2">&#34;Error during webstore lookup for &#39;</span><span class="nv">$ExtID</span><span class="s2">&#39; - &#39;</span><span class="nv">$_</span><span class="s2">&#39;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                    <span class="o">}</span>
</span></span><span class="line"><span class="cl">                <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="o">[</span>PSCustomObject<span class="o">][</span>Ordered<span class="o">]</span>@<span class="o">{</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">Name</span>        <span class="o">=</span> <span class="nv">$Title</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">Version</span>     <span class="o">=</span> <span class="nv">$Version</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">Description</span> <span class="o">=</span> <span class="nv">$Description</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">Username</span>    <span class="o">=</span> <span class="nv">$Username</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">ID</span>          <span class="o">=</span> <span class="nv">$ExtID</span>
</span></span><span class="line"><span class="cl">                <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span><span class="c1">#End function</span>
</span></span><span class="line"><span class="cl">        <span class="c1">#ENDREGION -----</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nv">$ExtensionFolderPath</span> <span class="o">=</span> <span class="s1">&#39;AppData\Local\Google\Chrome\User Data\Default\Extensions&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    PROCESS <span class="o">{</span>
</span></span><span class="line"><span class="cl">        Foreach <span class="o">(</span><span class="nv">$Computer</span> in <span class="nv">$Computername</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="o">(</span><span class="nv">$Username</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># Single userprofile</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$Path</span> <span class="o">=</span> Join-path -path <span class="s2">&#34;fileSystem::\\</span><span class="nv">$Computer</span><span class="s2">\C</span>$<span class="s2">\Users\$Username&#34;</span> -ChildPath <span class="nv">$ExtensionFolderPath</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$Extensions</span> <span class="o">=</span> Get-ChildItem -Path <span class="nv">$Path</span> -Directory -ErrorAction SilentlyContinue
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># All user profiles that contain this a Chrome extensions folder</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$Path</span> <span class="o">=</span> Join-path -path <span class="s2">&#34;fileSystem::\\</span><span class="nv">$Computer</span><span class="s2">\C</span>$<span class="s2">\Users\*&#34;</span> -ChildPath <span class="nv">$ExtensionFolderPath</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$Extensions</span> <span class="o">=</span>@<span class="o">()</span>
</span></span><span class="line"><span class="cl">                Get-Item -Path <span class="nv">$Path</span> -ErrorAction SilentlyContinue <span class="p">|</span> ForEach-Object<span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                    <span class="nv">$Extensions</span> +<span class="o">=</span> Get-ChildItem -Path <span class="nv">$_</span> -Directory -ErrorAction SilentlyContinue
</span></span><span class="line"><span class="cl">                <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="o">(</span>-not<span class="o">(</span><span class="nv">$null</span> -eq <span class="nv">$Extensions</span><span class="o">))</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                Foreach <span class="o">(</span><span class="nv">$Extension</span> in <span class="nv">$Extensions</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                    <span class="nv">$Output</span> <span class="o">=</span> Get-ExtensionInfo -Folder <span class="nv">$Extension</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$Output</span> <span class="p">|</span> Add-Member -MemberType NoteProperty -Name <span class="s1">&#39;Computername&#39;</span> -Value <span class="nv">$Computer</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$Output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">                Write-Warning <span class="s2">&#34;</span><span class="nv">$Computer</span><span class="s2"> : no extensions were found&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="o">}</span><span class="c1">#foreach</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><p><br/><br/></p>
<blockquote>
<p>This article was originally posted on <a href="http://write-verbose.com">Write-Verbose.com</a></p>
</blockquote>]]></content:encoded>
    </item>
    
  </channel>
</rss>
