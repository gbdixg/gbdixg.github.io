<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>windows10 on Write-Verbose</title>
    <link>https://write-verbose.com/tags/windows10/</link>
    <description>Recent content in windows10 on Write-Verbose</description>
    <image>
      <url>https://write-verbose.com/papermod-cover.png</url>
      <link>https://write-verbose.com/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 06 Apr 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://write-verbose.com/tags/windows10/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Export Remote Eventlog with PowerShell</title>
      <link>https://write-verbose.com/2019/04/06/export-eventlog/</link>
      <pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://write-verbose.com/2019/04/06/export-eventlog/</guid>
      <description>&lt;p&gt;This article includes a PowerShell &lt;em&gt;Export-Eventlog&lt;/em&gt; command to quickly export a Windows event log from a remote computer and copy it to the local machine.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>This article includes a PowerShell <em>Export-Eventlog</em> command to quickly export a Windows event log from a remote computer and copy it to the local machine.</p>
<p>Event logs are a cornerstone of troubleshooting, but getting access to them can be difficult across the network.</p>
<blockquote>
<p>It can be faster to export a Windows event log on a remote computer,  copy the .evtx file over the network and then query it locally.</p>
</blockquote>
<p>The PowerShell <strong>Get-Winevent</strong> command can work against remote event logs, but it can be painfully slow over the network. Copying an entire exported log (.evtx file) across the same connection is much faster. Get-Winevent can still be used with the <em>-path</em> parameter to query the locally copied .evtx file.</p>
<h2 id="powershell-script">PowerShell Script</h2>
<p><strong>wevtutil.exe</strong> is Windows .exe that can export event logs.  The PowerShell function below uses wevtutil to export one ore more event logs and copy them locally. The computer name is pre-pended to the log name.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="k">Function</span> <span class="nb">Export-EventLog</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="cm">&lt;#
</span></span></span><span class="line"><span class="cl"><span class="cm">		</span><span class="sd">.SYNOPSIS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">			Exports a remote event log to a file.
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">		</span><span class="sd">.DESCRIPTION</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">			Uses wevtutil.exe to perform the export on the remote computer
</span></span></span><span class="line"><span class="cl"><span class="cm">			The log(s) are saved to c:\Windows\Temp and then moved over the network to the local computer
</span></span></span><span class="line"><span class="cl"><span class="cm">			The resulting log file is $Path\$computername-$logname.evtx
</span></span></span><span class="line"><span class="cl"><span class="cm">			The file can then be opened in Windows Event Viewer or queried directly using &#34;Get-Winevent -Path....&#34;
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">			The remote computer must be online and the Windows Firewall must allow inbound RPC and SMB connections
</span></span></span><span class="line"><span class="cl"><span class="cm">		</span><span class="sd">.PARAMETER</span><span class="cm">  Computername
</span></span></span><span class="line"><span class="cl"><span class="cm">			The name of the remote computer.
</span></span></span><span class="line"><span class="cl"><span class="cm">		</span><span class="sd">.PARAMETER</span><span class="cm">  Logname
</span></span></span><span class="line"><span class="cl"><span class="cm">			The name(s) of the log file to export.
</span></span></span><span class="line"><span class="cl"><span class="cm">		</span><span class="sd">.PARAMETER</span><span class="cm">  Path
</span></span></span><span class="line"><span class="cl"><span class="cm">			The local folder path where the output file will be saved
</span></span></span><span class="line"><span class="cl"><span class="cm">			Default = %TEMP%
</span></span></span><span class="line"><span class="cl"><span class="cm">		</span><span class="sd">.PARAMETER</span><span class="cm">  RemotePath
</span></span></span><span class="line"><span class="cl"><span class="cm">			The remote folder path used to stage the exported file prior to moving it to the local folder path.
</span></span></span><span class="line"><span class="cl"><span class="cm">			Environment variables are not supported.
</span></span></span><span class="line"><span class="cl"><span class="cm">			Default = C:\Windows\Temp
</span></span></span><span class="line"><span class="cl"><span class="cm">		</span><span class="sd">.EXAMPLE</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">			PS C:\&gt; Export-EventLog -Computername &#34;PC654321&#34;
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">			This command will export the System and Application event logs from the remote computer PC654321
</span></span></span><span class="line"><span class="cl"><span class="cm">			The logs will be exported to c:\windows\temp on the remote computer then moved to
</span></span></span><span class="line"><span class="cl"><span class="cm">			c:\temp on the local computer
</span></span></span><span class="line"><span class="cl"><span class="cm">		</span><span class="sd">.EXAMPLE</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">			PS C:\&gt; Export-EventLog -Computername &#34;PC654321&#34; -LogName &#34;System&#34;,&#34;Security&#34;
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">			This command will export the System and Security event logs from the remote computer PC654321
</span></span></span><span class="line"><span class="cl"><span class="cm">		</span><span class="sd">.EXAMPLE</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">			PS C:\&gt; &#34;PC654321&#34; | Export-EventLog -LogName &#34;Application&#34;,&#34;Security&#34;
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">			This command will export the Application and Security event logs from the remote computer PC654321
</span></span></span><span class="line"><span class="cl"><span class="cm">		</span><span class="sd">.EXAMPLE</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">			PS C:\&gt; Get-Winevent -Computername $Computer -Listlog * -EA 0 | Where{$_.RecordCount -gt 0} | Export-EventLog -Computername $Computer
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">			This command will export all the event logs from the remote computer represented by the $computer variable
</span></span></span><span class="line"><span class="cl"><span class="cm">		</span><span class="sd">.NOTES</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">			Version: 1.0
</span></span></span><span class="line"><span class="cl"><span class="cm">	#&gt;</span>
</span></span><span class="line"><span class="cl">	<span class="p">[</span><span class="k">CmdletBinding</span><span class="p">()]</span>
</span></span><span class="line"><span class="cl">	<span class="k">param</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">		<span class="p">[</span><span class="k">parameter</span><span class="p">(</span><span class="k">position</span> <span class="p">=</span> <span class="n">0</span><span class="p">,</span> <span class="k">valuefromPipeline</span> <span class="p">=</span> <span class="nv">$true</span><span class="p">,</span> <span class="k">valuefrompipelinebypropertyname</span> <span class="p">=</span> <span class="nv">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">		<span class="no">[string[]]</span><span class="nv">$Computername</span> <span class="p">=</span> <span class="nv">$Env:COMPUTERNAME</span>
</span></span><span class="line"><span class="cl">		<span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="p">[</span><span class="k">parameter</span><span class="p">(</span><span class="k">position</span> <span class="p">=</span> <span class="n">1</span><span class="p">,</span> <span class="k">valuefrompipelinebypropertyname</span> <span class="p">=</span> <span class="nv">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">		<span class="no">[string[]]</span><span class="nv">$LogName</span> <span class="p">=</span> <span class="p">@(</span><span class="s2">&#34;System&#34;</span><span class="p">,</span> <span class="s2">&#34;Application&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="p">[</span><span class="k">parameter</span><span class="p">(</span><span class="k">position</span> <span class="p">=</span> <span class="n">2</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">		<span class="p">[</span><span class="n">ValidateScript</span><span class="p">(</span> <span class="p">{</span> <span class="nb">Test-Path</span> <span class="nv">$_</span> <span class="n">-PathType</span> <span class="s1">&#39;Container&#39;</span> <span class="p">})]</span>
</span></span><span class="line"><span class="cl">		<span class="no">[string]</span><span class="nv">$Path</span> <span class="p">=</span> <span class="nv">$ENV:TEMP</span>
</span></span><span class="line"><span class="cl">		<span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="p">[</span><span class="k">parameter</span><span class="p">(</span><span class="k">position</span> <span class="p">=</span> <span class="n">3</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">		<span class="no">[string]</span><span class="nv">$RemotePath</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">PROCESS</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">Foreach</span> <span class="p">(</span><span class="nv">$Name</span> <span class="k">in</span> <span class="nv">$Computername</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nb">Write-Progress</span> <span class="n">-id</span> <span class="n">1</span> <span class="n">-Activity</span> <span class="s2">&#34;Computer &#34;</span> <span class="n">-Status</span> <span class="s2">&#34;$Name&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="k">If</span> <span class="p">(</span><span class="nb">Test-Connection</span> <span class="n">-ComputerName</span> <span class="nv">$Name</span> <span class="n">-Count</span> <span class="n">1</span> <span class="n">-ErrorAction</span> <span class="n">SilentlyContinue</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nv">$LogName</span> <span class="p">|</span> <span class="nb">ForEach-Object</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">					<span class="nv">$Log</span> <span class="p">=</span> <span class="nv">$_</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">					<span class="nv">$Output</span> <span class="p">=</span> <span class="nb">New-Object</span> <span class="n">PSObject</span> <span class="p">|</span> <span class="nb">Select </span><span class="n">Computername</span><span class="p">,</span> <span class="n">LogName</span><span class="p">,</span> <span class="n">Path</span><span class="p">,</span> <span class="n">Result</span>
</span></span><span class="line"><span class="cl">					<span class="nv">$Output</span><span class="p">.</span><span class="n">Computername</span> <span class="p">=</span> <span class="nv">$Name</span>
</span></span><span class="line"><span class="cl">					<span class="nv">$Output</span><span class="p">.</span><span class="n">LogName</span> <span class="p">=</span> <span class="nv">$Log</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">					<span class="k">if</span> <span class="p">((</span><span class="nb">Get-WinEvent</span> <span class="n">-LogName</span> <span class="nv">$Log</span> <span class="n">-ComputerName</span> <span class="nv">$Name</span> <span class="n">-MaxEvents</span> <span class="n">1</span> <span class="n">-ErrorAction</span> <span class="n">SilentlyContinue</span> <span class="p">|</span> <span class="nb">Measure-Object</span><span class="p">).</span><span class="n">Count</span> <span class="o">-lt</span> <span class="n">1</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">						<span class="nb">Write-Warning</span> <span class="n">-Message</span> <span class="s2">&#34;$Name::$log log is empty. Skipping export&#34;</span>
</span></span><span class="line"><span class="cl">						<span class="k">return</span>
</span></span><span class="line"><span class="cl">					<span class="p">}</span>
</span></span><span class="line"><span class="cl">					<span class="nv">$OutputFileName</span> <span class="p">=</span> <span class="s2">&#34;$Name-</span><span class="p">$(</span><span class="nv">$Log</span> <span class="o">-replace</span> <span class="s2">&#34;/&#34;</span><span class="p">,</span><span class="s2">&#34;-&#34;</span><span class="p">)</span><span class="s2">.evtx&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">					<span class="nb">Write-Progress</span> <span class="n">-id</span> <span class="n">2</span> <span class="n">-ParentId</span> <span class="n">1</span> <span class="n">-Activity</span> <span class="s2">&#34;Exporting&#34;</span> <span class="n">-Status</span> <span class="s2">&#34;$Log&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">					<span class="k">if</span> <span class="p">(</span><span class="nv">$Name</span> <span class="o">-eq</span> <span class="nv">$Env:COMPUTERNAME</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">						<span class="nb">Write-Verbose</span> <span class="s2">&#34;Local computer...&#34;</span>
</span></span><span class="line"><span class="cl">						<span class="nv">$Cmd</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="p">$(</span><span class="nv">$Env:windir</span><span class="p">)</span><span class="s2">\system32\wevtutil.exe epl &#39;$Log&#39; &#39;$Path\$OutputFileName&#39; /r:$Name /ow:True 2&gt;&amp;1&#34;</span>
</span></span><span class="line"><span class="cl">						<span class="nv">$CmdResult</span> <span class="p">=</span> <span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$cmd</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">						<span class="k">if</span> <span class="p">(</span><span class="nv">$CmdResult</span> <span class="o">-eq</span> <span class="nv">$Null</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">							<span class="nb">Write-Verbose</span> <span class="s2">&#34;$Name::$log log export to &#39;$path&#39; = &#39;Success&#39;&#34;</span>
</span></span><span class="line"><span class="cl">							<span class="nv">$Output</span><span class="p">.</span><span class="n">Result</span> <span class="p">=</span> <span class="s2">&#34;Success&#34;</span>
</span></span><span class="line"><span class="cl">						<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">							<span class="nb">Write-Error</span> <span class="s2">&#34;$Name::$log log export to &#39;$path&#39; = &#39;$CmdResult&#39;&#34;</span>
</span></span><span class="line"><span class="cl">							<span class="nv">$Output</span><span class="p">.</span><span class="n">Result</span> <span class="p">=</span> <span class="s2">&#34;Error - $CMDResult&#34;</span>
</span></span><span class="line"><span class="cl">						<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">					<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">						<span class="nb">Write-Verbose</span> <span class="s2">&#34;Remote computer...&#34;</span>
</span></span><span class="line"><span class="cl">						<span class="c"># Wevtutil LogName filepath /r:&lt;remote computer&gt; /ow:&lt;Overwrite true/false&gt;</span>
</span></span><span class="line"><span class="cl">						<span class="nv">$Cmd</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="p">$(</span><span class="nv">$Env:windir</span><span class="p">)</span><span class="s2">\system32\wevtutil.exe epl &#39;$Log&#39; &#39;$RemotePath\$OutputFileName&#39; /r:$Name /ow:True 2&gt;&amp;1&#34;</span>
</span></span><span class="line"><span class="cl">						<span class="nv">$CmdResult</span> <span class="p">=</span> <span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$cmd</span>
</span></span><span class="line"><span class="cl">						<span class="k">if</span> <span class="p">(</span><span class="nv">$CmdResult</span> <span class="o">-eq</span> <span class="nv">$Null</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">							<span class="c"># Convert &lt;Drive&gt;:\ to \&lt;Drive&gt;$ for remote connection</span>
</span></span><span class="line"><span class="cl">							<span class="nv">$RemoteUNC</span> <span class="p">=</span> <span class="nv">$RemotePath</span> <span class="o">-Replace</span> <span class="s1">&#39;(?&lt;Drive&gt;[A-Za-z]+):&#39;</span><span class="p">,</span> <span class="s1">&#39;${Drive}$$&#39;</span> <span class="c"># c:\ = c$\</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">							<span class="nb">Write-Verbose</span> <span class="s2">&#34;$Name::$log log export to &#39;\\$Name\$RemoteUNC\$OutputFileName&#39; = &#39;Success&#39;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">							<span class="nb">Write-Progress</span> <span class="n">-id</span> <span class="n">3</span> <span class="n">-ParentId</span> <span class="n">1</span> <span class="n">-Activity</span> <span class="s2">&#34;Copying&#34;</span> <span class="n">-Status</span> <span class="s2">&#34;$Log&#34;</span>
</span></span><span class="line"><span class="cl">							<span class="k">Try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">								<span class="nb">move-item</span> <span class="n">-path</span> <span class="s2">&#34;filesystem::\\$Name\$RemoteUNC\$OutputFileName&#34;</span> <span class="n">-Dest</span> <span class="nv">$Path</span> <span class="n">-Force</span> <span class="n">-ErrorAction</span> <span class="n">Stop</span>
</span></span><span class="line"><span class="cl">								<span class="nb">Write-Verbose</span> <span class="s2">&#34;$Name::$log log move to &#39;$path&#39; = Success&#34;</span>
</span></span><span class="line"><span class="cl">								<span class="nv">$Output</span><span class="p">.</span><span class="n">Result</span> <span class="p">=</span> <span class="s2">&#34;Success&#34;</span>
</span></span><span class="line"><span class="cl">							<span class="p">}</span> <span class="k">Catch</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">								<span class="nb">Write-Error</span> <span class="s2">&#34;$Name::$log log move to &#39;$path&#39; failed - &#39;$_&#39;&#34;</span>
</span></span><span class="line"><span class="cl">								<span class="nv">$Output</span><span class="p">.</span><span class="n">Result</span> <span class="p">=</span> <span class="s2">&#34;Error - &#39;$_&#39;&#34;</span>
</span></span><span class="line"><span class="cl">							<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">						<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">							<span class="nb">Write-Error</span> <span class="s2">&#34;$Name::$log log export to &#39;\\$Name\$RemotePath&#39; = &#39;$CmdResult&#39;&#34;</span>
</span></span><span class="line"><span class="cl">							<span class="nv">$Result</span> <span class="p">=</span> <span class="s2">&#34;Error - $CMDResult&#34;</span>
</span></span><span class="line"><span class="cl">						<span class="p">}</span>
</span></span><span class="line"><span class="cl">					<span class="p">}</span><span class="c">#end if</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">					<span class="nv">$Output</span><span class="p">.</span><span class="n">Path</span> <span class="p">=</span> <span class="s2">&#34;$Path\$OutputFileName&#34;</span>
</span></span><span class="line"><span class="cl">					<span class="nv">$Output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">				<span class="p">}</span><span class="c">#foreach logname</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nb">Write-Warning</span> <span class="n">-Message</span> <span class="s2">&#34;$Name :: ping failed&#34;</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span> <span class="c">#foreach Name</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span><span class="c">#process</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span><span class="c">#EndFunction</span>
</span></span></code></pre></div><p><br/><br/></p>
<blockquote>
<p>This article was originally posted on <a href="http://write-verbose.com">Write-Verbose.com</a></p>
</blockquote>]]></content:encoded>
    </item>
    
  </channel>
</rss>
